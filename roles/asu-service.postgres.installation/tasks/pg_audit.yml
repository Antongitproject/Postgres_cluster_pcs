---
# pg_audit (start)
- block:

  - name: Create extention pg_proaudit
    shell: "{{ item }}"
    loop:
      - sudo -iu postgres psql -U postgres -p {{ POSTGRES_PORT }} -c "CREATE EXTENSION {{ pg_audit_name }};"
  
  - name: Create extention pgaudit and change postgresql.auto.conf
    shell: sudo -ui postgres psql -U postgres -p {{ POSTGRES_PORT }} -c "ALTER SYSTEM SET {{ pg_audit_name }}.log = ROLE, DDL, MISC, FUNCTION"
    when: POSTGRES_VENDOR == "postgresql"
  
  - name: Change postgresql.auto.conf
    shell:
      cmd: "{{ item }}"
    loop:
      - sudo -iu postgres psql -U postgres -p {{ POSTGRES_PORT }} -c "SELECT pg_proaudit_set_role ('ALTER ROLE', 'postgres'::regrole)"
      - sudo -iu postgres psql -U postgres -p {{ POSTGRES_PORT }} -c "SELECT pg_proaudit_set_role ('CREATE ROLE', 'postgres'::regrole)"
      - sudo -iu postgres psql -U postgres -p {{ POSTGRES_PORT }} -c "SELECT pg_proaudit_set_role ('DROP ROLE', 'postgres'::regrole)"
      - sudo -iu postgres psql -U postgres -p {{ POSTGRES_PORT }} -c "SELECT pg_proaudit_set_role ('GRANT', 'postgres'::regrole)"
      - sudo -iu postgres psql -U postgres -p {{ POSTGRES_PORT }} -c "SELECT pg_proaudit_set_role ('REVOKE', 'postgres'::regrole)"
      - sudo -iu postgres psql -U postgres -p {{ POSTGRES_PORT }} -c "SELECT pg_proaudit_set_object ('ALL', 'table')"
    when: POSTGRES_VENDOR == "postgrepro"
  
  - name: Restart PG
    command: "sudo -iu postgres {{ POSTGRES_BIN }}/pg_ctl restart -D {{ PGDATA_PATH }}"
    when: ( total_count_servers_group_slave|int == 0 ) 

  when: ('master_server' in groups and groups['master_server']) and inventory_hostname in groups['master_server'] 
# pg_audit (stop)